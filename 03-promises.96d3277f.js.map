{"mappings":"iiBAAA,IAaIA,EACAC,EAdJC,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,SAEnCC,EAAM,GAgCV,SAASC,EAAcC,EAAUC,GAE5B,OADHC,QAAQC,IAAIZ,GACF,IAAIa,SAAQ,SAACC,EAASC,GAC9B,IAAMC,EAAgBC,KAAKC,SAAW,GACtBC,aAAY,WACtBH,EACFF,EAAQ,CAAEM,SAAAX,EAAUC,UAEpBK,EAAO,CAAEK,SAAAX,EAAUC,S,GAEpBV,E,IAzCPI,EAAQiB,iBAAiB,UACzB,SAAyBC,GACvB,IAAMC,EAAOD,EAAEE,OAAOD,KAChBE,EAAQH,EAAEE,OAAOC,MACvBlB,EAAIgB,GAAQE,EACRd,QAAQC,IAAIL,E,IAKlBH,EAAQiB,iBAAiB,UAAU,SAACC,GAClCA,EAAEI,iBACF,IAAK,IAAIC,EAAI,EAAGA,GAAKpB,EAAIqB,OAAQD,GAAK,EAChC1B,EAAW0B,EAEPA,EAAI,IACN3B,EAAOO,EAAIsB,MAEH,IAANF,IACF3B,EAAOO,EAAIG,OAGnBF,EAAcP,EAAUM,EAAIG,OAAOoB,MAAK,SAAAC,G,IAAGC,EAAQD,EAARX,SAAUV,EAAKqB,EAALrB,MACnDuB,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAAN1B,EAAM,M,IAErE2B,OAAM,SAAAN,G,IAAGO,EAAQP,EAARX,SAAUV,EAAKqB,EAALrB,MAClBuB,EAAA/B,GAASgC,OAAOK,QAAQ,sBAAqCH,OAAfE,EAAS,QAAYF,OAAN1B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\n\nlet obj = {};\nformRef.addEventListener('change', onChangePromise);\nfunction onChangePromise(e) { \n  const name = e.target.name;\n  const value = e.target.value;\n  obj[name] = value;\n      console.log(obj);\n\n};\nlet time;\nlet position;\nformRef.addEventListener('submit', (e) => {\n  e.preventDefault();\n  for (let i = 1; i <= obj.amount; i += 1) {\n        position = i;\n        \n        if (i > 1) {\n          time = obj.step;\n    };\n        if (i === 1) {\n          time = obj.delay;\n    };\n     \n  createPromise(position, obj.delay).then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    })\n  }\n});\n\nfunction createPromise(position, delay) {\n  console.log(time);\n     return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    const timerId = setInterval(() => {\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, time);\n     })\n  };\n  \n\n"],"names":["$ce04d3a99e08e73b$var$time","$ce04d3a99e08e73b$var$position","$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$obj","$ce04d3a99e08e73b$var$createPromise","position3","delay","console","log","Promise","resolve","reject","shouldResolve","Math","random","setInterval","position","addEventListener","e","name","target","value","preventDefault","i","amount","step","then","param","position1","$parcel$interopDefault","Notify","success","concat","catch","position2","failure"],"version":3,"file":"03-promises.96d3277f.js.map"}